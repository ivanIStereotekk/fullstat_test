# Generated by Django 4.0.4 on 2022-06-07 19:51

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('gender', models.CharField(choices=[('m', 'Male'), ('*', 'None'), ('w', 'Woman')], default='*', max_length=4, verbose_name='Gender')),
                ('biography', models.TextField(max_length=555, null=True, verbose_name='Biography')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Registred User',
                'verbose_name_plural': "Registred User's",
                'ordering': ['username', 'email'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid_tag', models.UUIDField(default=uuid.uuid4, null=True)),
                ('title', models.TextField(max_length=80, verbose_name='Title of Article')),
                ('discription', models.TextField(max_length=250, null=True, verbose_name='Short description')),
                ('content', models.TextField(verbose_name='Text body')),
                ('req_count', models.IntegerField(default=0, null=True, verbose_name='Reading counter')),
                ('slug', models.SlugField(default=None, max_length=90, unique=True, verbose_name='Url-slug')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('rating', models.IntegerField(null=True, verbose_name='Rating Of publication')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Author_ID')),
            ],
            options={
                'verbose_name': 'Publication or Post',
                'verbose_name_plural': 'Publications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estimation', models.CharField(choices=[('-0', 'Minus'), ('0', 'Null'), ('1', 'Plus One')], max_length=4, verbose_name='My estimation')),
                ('is_bookmarked', models.BooleanField(default=False, verbose_name='Is Bookmarked')),
                ('like', models.BooleanField(default=False, verbose_name='Like')),
                ('disslike', models.BooleanField(default=False, verbose_name='Disslike')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.post', verbose_name='Publication')),
            ],
        ),
        migrations.CreateModel(
            name='Bookmark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bookmark_name', models.TextField(max_length=80, verbose_name='Bookmark title')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owner', to=settings.AUTH_USER_MODEL, verbose_name='Owner')),
                ('posts', models.ManyToManyField(to='app.post', verbose_name='Subscribed posts')),
            ],
        ),
    ]
