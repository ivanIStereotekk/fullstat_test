GOAL
Read the news feed, probably liked and favorite news. Have
the ability to evaluate the rating and number of views on it, as well as
Opportunity to re-write
USER HISTORY
I, as a user, want to register in the service, specify a login, password and
Email address.
I, as a user, want to see a list of current news in my feed,
specified title, preview, short description, number of views and
article rating.
I, as a user, want a large amount of news in the feed on one
go to page between news
I, as a user, want to sort news by rating and publication date
I, as a user, want to read a specific article by seeing the title, preview,
content of articles, number of views and rating of articles
I, as a user, want to upvote or downvote a post, remove my
review
I, as a user, want to communicate liked articles
I, as a user, want to find an article in the address bar by writing its title
transliteration
I, as an authorized user, want to write my article, indicating in it
title, preview, short description and content
one
FULLSTATS TEST
I, as an authorized user, want to add articles to my favorites,
recommendation articles in favorites, deleting them
BUSINESS REQUIREMENTS
The article found the following information
- Article article (number)
- Title of the article in transliteration (string)
- Article title (string)
- Author (string)
- Summary (line | max. 250 characters)
- Content (string)
- Number of views (number)
- Favorited (true/false)
- My score (-1, 0, 1)
- Rating (number)
The view count should correspond to each successful receipt of the article
user
Everyone should start the process of updating information on all products,
to which users are subscribed.
TECHNICAL PRESENTATION
Django app providing RESTful API for JWT authentication,
getting all the articles by a normal user and using their articles
authorized user (CRUD), editing the list of likes and
Featured Articles (Read + Update), Get Articles
by sequence and quantity (pagination by pages + sorting by
rating, views and publication date).




Russian #####################
BACKEND DEVELOPER
ЦЕЛЬ
Читать ленту новостей, отслеживать понравившиеся и избранные новости. Иметь
возможность оценить рейтинг новости и количество просмотров на ней, а также
возможность написать собственную статью
USER STORY
Я, как пользователь, хочу зарегистрироваться в сервисе, указать логин, пароль и
email.
Я, как пользователь, хочу видеть список актуальных новостей в своей ленте, у
которых указан заголовок, превью, краткое описание, количество просмотров и
рейтинг статьи.
Я, как пользователь, хочу редактировать количество новостей в ленте на одной
странице и переключаться по страницам между новостями
Я, как пользователь, хочу сортировать новости по рейтингу и по дате публикации
Я, как пользователь, хочу читать конкретную статью, увидев заголовок, превью,
содержание статьи, кол-во просмотров и рейтинг статьи
Я, как пользователь, хочу повышать или понижать рейтинг записи, убрать свою
оценку
Я, как пользователь, хочу просматривать понравившиеся статьи
Я, как пользователь, хочу найти статью в адресной строке, написав ее название
транслитом
Я, как авторизованный пользователь, хочу написать свою статью, указав в ней
заголовок, превью, краткое описание и содержимое
1
ТЕСТОВОЕ ЗАДАНИЕ FULLSTATS
Я, как авторизованный пользователь, хочу добавлять статьи в избранное,
просматривать статьи в избранном, удалять их
БИЗНЕС ТРЕБОВАНИЯ
По Статье хранится следующая информация
- Артикул статьи (число)
- Заголовок статьи транслитом (строка)
- Заголовок статьи (строка)
- Автор (строка)
- Краткое содержание (строка | макс. 250 символов)
- Содержание (строка)
- Количество просмотров (число)
- В избранном (true/false)
- Моя оценка (-1, 0, 1)
- Рейтинг (число)
Счетчик просмотров должен увеличиваться на каждое успешное получение статьи
пользователем
Каждый час должен запускаться процесс обновления информации о всех товарах,
на которые подписаны пользователи.
ТЕХНИЧЕСКОЕ ПРЕДСТАВЛЕНИЕ
Django-приложение, предоставляющее RESTful API для JWT аутентификации,
получения всех статей обычным пользователем и редактирования своих статьей
авторизованным пользователем (CRUD), редактирование списка понравившихся и
избранных статей (Read + Update), получения статей в определенной
последовательности и количестве (пагинация по страницам + сортировка по
рейтингу, просмотрам и дате публикации).